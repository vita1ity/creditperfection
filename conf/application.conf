## Akka
# https://www.playframework.com/documentation/latest/ScalaAkka#Configuration
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
akka {
}

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
play.crypto.secret = "changeme"

## Modules
# https://www.playframework.com/documentation/latest/Modules
play.modules {

}

## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N
# https://www.playframework.com/documentation/latest/ScalaI18N
play.i18n {
  langs = [ "en" ]
}

play.http {
  ## Router
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting

  ## Action Creator
  # https://www.playframework.com/documentation/latest/JavaActionCreator

  ## ErrorHandler
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting

  ## Filters
  # https://www.playframework.com/documentation/latest/ScalaHttpFilters
  # https://www.playframework.com/documentation/latest/JavaHttpFilters

  ## Session & Flash
  # https://www.playframework.com/documentation/latest/JavaSessionFlash
  # https://www.playframework.com/documentation/latest/ScalaSessionFlash
  session {
  }

  flash {
  }
}

## Netty Provider
# https://www.playframework.com/documentation/latest/SettingsNetty
play.server.netty {
  transport = "native"
}

## WS (HTTP Client)
# https://www.playframework.com/documentation/latest/ScalaWS#Configuring-WS
play.ws {
  trustManager = {
    stores = [
      { path = "/var/www/truststore/truststore.ts", type: "JKS"  }
    ]
  }
}

## Cache
# https://www.playframework.com/documentation/latest/JavaCache
# https://www.playframework.com/documentation/latest/ScalaCache
play.cache {
}

## Filters
# https://www.playframework.com/documentation/latest/Filters
play.filters {
  ## CORS filter configuration
  # https://www.playframework.com/documentation/latest/CorsFilter
  cors {
  }

  ## CSRF Filter
  # https://www.playframework.com/documentation/latest/ScalaCsrf#Applying-a-global-CSRF-filter
  # https://www.playframework.com/documentation/latest/JavaCsrf#Applying-a-global-CSRF-filter
  csrf {
  }

  ## Security headers filter configuration
  # https://www.playframework.com/documentation/latest/SecurityHeaders
  headers {
  }

  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  hosts {
  }
}

## Evolutions
# https://www.playframework.com/documentation/latest/Evolutions
play.evolutions {
  db.default.applyEvolutions = true
  db.default.autoApplyDowns = true
}
## Database Connection Pool
# https://www.playframework.com/documentation/latest/SettingsJDBC
play.db {

  prototype {

  }
}

db {
  default.driver=com.mysql.jdbc.Driver
  default.url="jdbc:mysql://localhost/creditperfection"
  default.username=root
  default.password="root"
}

ebean.default = ["models.*"]

email.username = "vitalii.oleksiv@gmail.com"
email.password = "liverpool0_1892"
app.test = "http://localhost:9000"

#Authorise.Net API details
authorise.net.login.id = 9yTxLt29j7Xb
authorise.net.transaction.key = 9GJJcp75mXY93f54

authorise.net.sandbox.login.id = 8evXb6X5c
authorise.net.sandbox.transaction.key = 3P5Z8tQ4J86tcc66
authorise.net.sandbox.secret.key = Simon

application.global = services.Global